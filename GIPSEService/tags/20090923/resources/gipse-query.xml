<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap

PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"

"http://www.ibatis.com/dtd/sql-map-2.dtd">
 
<sqlMap namespace="gipse">
	<select id="mscBasicSelect" resultClass="gov.cdc.ncphi.phgrid.services.gipse.service.dao.Observation" remapResults="true">
		SELECT ${db.gipse.table.column.date} as observationDate
		,${db.gipse.table.column.classifier} as classifier
		,${db.gipse.table.column.indicator} as indicator
		,${db.gipse.table.column.state} as state
		<dynamic>
			<isNotEmpty prepend=", " property="zip3s">
				${db.gipse.table.column.zip3} 
            </isNotEmpty>
			<isNotEmpty prepend=", " property="zip5s">
				${db.gipse.table.column.zip5} 
            </isNotEmpty>
			<isNotEmpty prepend=", " property="ages">
				${db.gipse.table.column.age} 
            </isNotEmpty>
			<isNotEmpty prepend=", " property="serviceAreas">
				${db.gipse.table.column.service.area} as serviceArea
            </isNotEmpty>
		</dynamic>
		,sum(${db.gipse.table.column.value}) as value
		FROM ${db.gipse.table}
		<dynamic prepend=" WHERE ">
			<isNotEmpty prepend="AND" property="startDate">
				${db.gipse.table.column.date} &gt;=#startDate#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="endDate">
                  ${db.gipse.table.column.date} &lt;#endDate#
            </isNotEmpty>
	      	<isNotEmpty prepend="AND" property="states">
	            <iterate property="states" open="(" close=")"
	                  conjunction="OR">
	                  ${db.gipse.table.column.state} Like #states[]#
	            </iterate>
	        </isNotEmpty>
			<isNotEmpty prepend="AND" property="zip3s">
	            <iterate property="zip3s" open="(" close=")"
	                  conjunction="OR">
	                  ${db.gipse.table.column.zip3} Like #zip3s[]#
	            </iterate>
	        </isNotEmpty>
	      	<isNotEmpty prepend="AND" property="zip5s">
	            <iterate property="zip5s" open="(" close=")"
	                  conjunction="OR">
	                  ${db.gipse.table.column.zip5} Like #zip5s[]#
	            </iterate>
	        </isNotEmpty>	        
            <isNotEmpty prepend="AND" property="classifier">
                  ${db.gipse.table.column.classifier}=#classifier#
            </isNotEmpty>
	      	<isNotEmpty prepend="AND" property="indicators">
	            <iterate property="indicators" open="(" close=")"
	                  conjunction="OR">
	                  ${db.gipse.table.column.indicator}=#indicators[]#
	            </iterate>
	        </isNotEmpty>
	      	<isNotEmpty prepend="AND" property="dataSources">
	            <iterate property="dataSources" open="(" close=")"
	                  conjunction="OR">
	                  ${db.gipse.table.column.data.source}=#dataSources[]#
	            </iterate>
	        </isNotEmpty>
	        <isNotEmpty prepend="AND" property="ages">
	            <iterate property="ages" open="(" close=")"
	                  conjunction="OR">
	                  ${db.gipse.table.column.age}=#ages[]#
	            </iterate>
	        </isNotEmpty>
	      	<isNotEmpty prepend="AND" property="serviceAreas">
	            <iterate property="serviceAreas" open="(" close=")"
	                  conjunction="OR">
	                  ${db.gipse.table.column.service.area}=#serviceAreas[]#
	            </iterate>
	        </isNotEmpty>
		</dynamic>
	      GROUP BY ${db.gipse.table.column.date}
		      , ${db.gipse.table.column.state}
	      <dynamic>
            <isNotEmpty prepend=", " property="zip3s">
             ${db.gipse.table.column.zip3}
            </isNotEmpty>
            <isNotEmpty prepend=", " property="zip5s">
             ${db.gipse.table.column.zip5}
            </isNotEmpty>
          </dynamic>   
	      , ${db.gipse.table.column.classifier}
	      , ${db.gipse.table.column.indicator}
	      <dynamic>
            <isNotEmpty prepend=", " property="ages">
            	 ${db.gipse.table.column.age}
            </isNotEmpty>
            <isNotEmpty prepend=", " property="serviceAreas">
            	 ${db.gipse.table.column.service.area}
            </isNotEmpty>
		</dynamic>
	</select>
</sqlMap>
