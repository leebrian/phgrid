package gov.cdc.ncphi.phgrid.services.gipse.service.globus;

import gov.cdc.ncphi.phgrid.services.gipse.service.GIPSEServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the GIPSEServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class GIPSEServiceProviderImpl{
	
	GIPSEServiceImpl impl;
	
	public GIPSEServiceProviderImpl() throws RemoteException {
		impl = new GIPSEServiceImpl();
	}
	

    public gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryMetadataResponse queryMetadata(gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryMetadataRequest params) throws RemoteException {
    gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryMetadataResponse boxedResult = new gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryMetadataResponse();
    boxedResult.setMetadataQueryResponse(impl.queryMetadata(params.getQuery().getMetadataQuery()));
    return boxedResult;
  }

    public gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryGIPSEResponse queryGIPSE(gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryGIPSERequest params) throws RemoteException {
    gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryGIPSEResponse boxedResult = new gov.cdc.ncphi.phgrid.services.gipse.stubs.QueryGIPSEResponse();
    boxedResult.setGIPSEQueryResponse(impl.queryGIPSE(params.getQuery().getGIPSEQueryRequest()));
    return boxedResult;
  }

}
