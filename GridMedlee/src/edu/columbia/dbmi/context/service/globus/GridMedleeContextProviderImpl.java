package edu.columbia.dbmi.context.service.globus;

import edu.columbia.dbmi.context.service.GridMedleeContextImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the GridMedleeImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class GridMedleeContextProviderImpl{
	
	GridMedleeContextImpl impl;
	
	public GridMedleeContextProviderImpl() throws RemoteException {
		impl = new GridMedleeContextImpl();
	}
	

    public edu.columbia.dbmi.context.stubs.GetStatusResponse getStatus(edu.columbia.dbmi.context.stubs.GetStatusRequest params) throws RemoteException {
    edu.columbia.dbmi.context.stubs.GetStatusResponse boxedResult = new edu.columbia.dbmi.context.stubs.GetStatusResponse();
    boxedResult.setStatus(impl.getStatus());
    return boxedResult;
  }

    public edu.columbia.dbmi.context.stubs.GetOutputDocumentsResponse getOutputDocuments(edu.columbia.dbmi.context.stubs.GetOutputDocumentsRequest params) throws RemoteException {
    edu.columbia.dbmi.context.stubs.GetOutputDocumentsResponse boxedResult = new edu.columbia.dbmi.context.stubs.GetOutputDocumentsResponse();
    boxedResult.setMedleeOutputDocuments(impl.getOutputDocuments());
    return boxedResult;
  }

}
