package org.cagrid.transfer.service.globus;

import org.cagrid.transfer.service.TransferServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the TransferServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class TransferServiceProviderImpl{
	
	TransferServiceImpl impl;
	
	public TransferServiceProviderImpl() throws RemoteException {
		impl = new TransferServiceImpl();
	}
	

    public org.cagrid.transfer.stubs.StoreFileResponse storeFile(org.cagrid.transfer.stubs.StoreFileRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.StoreFileResponse boxedResult = new org.cagrid.transfer.stubs.StoreFileResponse();
    boxedResult.setTransferServiceContextReference(impl.storeFile(params.getFilename(),params.getDirectory()));
    return boxedResult;
  }

    public org.cagrid.transfer.stubs.RetrieveFileResponse retrieveFile(org.cagrid.transfer.stubs.RetrieveFileRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.RetrieveFileResponse boxedResult = new org.cagrid.transfer.stubs.RetrieveFileResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveFile(params.getFilename(),params.getDirectory()));
    return boxedResult;
  }

    public org.cagrid.transfer.stubs.StoreDataResponse storeData(org.cagrid.transfer.stubs.StoreDataRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.StoreDataResponse boxedResult = new org.cagrid.transfer.stubs.StoreDataResponse();
    boxedResult.setTransferServiceContextReference(impl.storeData(params.getDirectory()));
    return boxedResult;
  }

    public org.cagrid.transfer.stubs.RetrieveDataResponse retrieveData(org.cagrid.transfer.stubs.RetrieveDataRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.RetrieveDataResponse boxedResult = new org.cagrid.transfer.stubs.RetrieveDataResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveData());
    return boxedResult;
  }

    public org.cagrid.transfer.stubs.ViewDirectoryResponse viewDirectory(org.cagrid.transfer.stubs.ViewDirectoryRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.ViewDirectoryResponse boxedResult = new org.cagrid.transfer.stubs.ViewDirectoryResponse();
    boxedResult.setResponse(impl.viewDirectory(params.getDirectory()));
    return boxedResult;
  }

    public org.cagrid.transfer.stubs.MakeDirectoryResponse makeDirectory(org.cagrid.transfer.stubs.MakeDirectoryRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.MakeDirectoryResponse boxedResult = new org.cagrid.transfer.stubs.MakeDirectoryResponse();
    boxedResult.setResponse(impl.makeDirectory(params.getDirectory()));
    return boxedResult;
  }

    public org.cagrid.transfer.stubs.DeleteDirectoryResponse deleteDirectory(org.cagrid.transfer.stubs.DeleteDirectoryRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.DeleteDirectoryResponse boxedResult = new org.cagrid.transfer.stubs.DeleteDirectoryResponse();
    boxedResult.setResponse(impl.deleteDirectory(params.getDirectory()));
    return boxedResult;
  }

    public org.cagrid.transfer.stubs.DeleteFileResponse deleteFile(org.cagrid.transfer.stubs.DeleteFileRequest params) throws RemoteException {
    org.cagrid.transfer.stubs.DeleteFileResponse boxedResult = new org.cagrid.transfer.stubs.DeleteFileResponse();
    boxedResult.setResponse(impl.deleteFile(params.getFilename(),params.getDirectory()));
    return boxedResult;
  }

}
