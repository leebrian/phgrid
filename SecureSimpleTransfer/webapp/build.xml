<?xml version="1.0"?>
<project default="all" name="build transfer webapp" basedir=".">

	<!-- ============================================================== -->
	<!-- MASTER BUILD FILE DO NOT EDIT OR INTRODUCE MAY OVERWRITE       -->
	<!-- In order to customize the build please edit the dev-build.xml  -->
	<!-- ============================================================== -->

	<!-- Define the environment variable -->
	<property environment="env" />

	<property file="introduce.properties" />
	<property file="../project.properties" />
	<property name="service.name" value="Transfer" />

	<!-- Important directories and files -->
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="WEB-INF/lib" />
   	<property name="classes.dir" value="WEB-INF/classes" />


	<!-- Jars -->
	<property name="jar.prefix" value="caGrid-${service.name}" />
	<property name="webapp.jar.name" value="${jar.prefix}-webapp-${project.version}.jar" />
    <property name="webapp.war.name" value="caGrid${service.name}.war" />


	<!-- Basic Build directories -->

	<!-- Auxiliary directory where all the intermediate files will be placed -->
	<property name="build.dir" location="build" />
	<!-- Directory for compiled service classes -->
	<property name="build.dest" location="${build.dir}/classes" />
	<!-- Directory for compiled JAR files (additional library files required by
	     the service will also be placed here) -->
	<property name="build.lib.dir" location="${build.dir}/lib" />
    <property name="build.war.dir" location="${build.dir}/war" />
    <property name="build.classes.dir" location="${build.dir}/classes" />


	<!-- We want detailed error messages -->
	<property name="java.debug" value="on" />

	<!-- ============================================================== -->
	<!-- Globus properties                                              -->
	<!-- ============================================================== -->
	<target name="checkGlobus" depends="setGlobus">
		<condition property="globus.not.found">
			<or>
				<not>
					<isset property="ext.globus.dir" />
				</not>
				<equals arg1="${ext.globus.dir}" arg2="" />
			</or>
		</condition>
		<fail message="Globus installation is not set in either GLOBUS_LOCATION or ext.globus.dir" if="globus.not.found" />
		<echo message="Globus: ${ext.globus.dir}" />
	</target>
	<target name="setGlobus" if="env.GLOBUS_LOCATION">
		<!-- GT4 build files and directories-->
		<property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
	</target>

	<!-- ============================================================== -->
	<!-- Tomcat properties                                              -->
	<!-- ============================================================== -->
	<target name="checkTomcat" depends="setTomcat">
		<condition property="tomcat.not.found">
			<or>
				<not>
					<isset property="ext.tomcat.dir" />
				</not>
				<equals arg1="${ext.tomcat.dir}" arg2="" />
			</or>
		</condition>
		<fail message="Tomcat installation is not set in either CATALINA_HOME or ext.tomcat.dir" if="tomcat.not.found" />
		<echo message="Tomcat: ${ext.tomcat.dir}" />
	</target>
	<target name="setTomcat" if="env.CATALINA_HOME">
		<property name="ext.tomcat.dir" value="${env.CATALINA_HOME}" />
	</target>

	<!-- ============================================================== -->
	<!-- JBoss properties                                               -->
	<!-- ============================================================== -->
	<target name="checkJBoss" depends="setJBoss">
		<condition property="jboss.not.found">
			<or>
				<not>
					<isset property="ext.jboss.dir" />
				</not>
				<equals arg1="${ext.jboss.dir}" arg2="" />
			</or>
		</condition>
		<fail message="JBoss installation is not set in either JBOSS_HOME or ext.jboss.dir" if="jboss.not.found" />
		<echo message="JBoss: ${ext.jboss.dir}" />
	</target>
	<target name="setJBoss" if="env.JBOSS_HOME">
		<property name="ext.jboss.dir" value="${env.JBOSS_HOME}" />
	</target>


	<!-- Sets up the build directory structure -->
	<target name="init" depends="defineClasspaths">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dest}" />
		<mkdir dir="${build.lib.dir}" />
        <mkdir dir="${build.war.dir}" />
	</target>

	<target name="defineClasspaths" depends="checkGlobus">
		<path id="build.classpath">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="../build/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="../ext/dependencies/service/jars">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ext.globus.dir}/lib">
				<include name="*.jar" />
			</fileset>
		</path>
	</target>


	<!-- Compile the implementation classes (service, resource, etc.) -->
	<target name="compile" depends="init" description="Compiles the service.">
		<javac srcdir="${src.dir}" classpathref="build.classpath" includes="**" destdir="${build.dest}" debug="${java.debug}" deprecation="${deprecation}" />

		<!-- Copy the source code, wsdd, properties, etc to the build dir for include in the jar -->
		<copy toDir="${build.dest}">
			<fileset dir="${src.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>


	<!-- Create a JAR file with the implementation classes -->
	<target name="jar" depends="compile">
		<jar jarfile="${build.lib.dir}/${webapp.jar.name}" basedir="${build.dest}">
			<include name="**/*" />
		</jar>
	</target>


	<!-- Empty target, in case we simply want to generate the JAR files -->
	<target name="jars" depends="jar" />



	<!-- Clean up all the intermediate files -->
	<target name="clean" description="Removes all generated build artifacts.">
		<delete dir="${build.dir}" />
	</target>


	<!-- Default target "all" builds and jars everything, including test....does not make a GAR-->
	<target name="all" depends="jars, war" description="Builds the entire service." />

    
        
    <!-- Create a war file -->
	<target name="war" depends="jars" description="Builds war file">
        <war destfile="${build.war.dir}/${webapp.war.name}" basedir="${build.dest}" webxml="WEB-INF/web.xml">
            <lib dir="${build.lib.dir}">
                <include name="**/*" />
            </lib>
            <lib dir="../build/lib">
                <include name="*Transfer-stubs*" />
                <include name="caGrid*core*" />
            </lib>  
            <lib dir="../ext/dependencies/service/jars">
               <include name="caGrid*core*" />
            </lib>
            <lib dir="${ext.globus.dir}/lib">
                <include name="addressing-1.0.jar" />
                <include name="axis-url.jar" />
                <include name="axis.jar" />
                <include name="bootstrap.jar" />
                <include name="cog-axis.jar" />
    			<include name="cog-jglobus.jar" />
                <include name="cog-tomcat.jar" />
    			<include name="cog-url.jar" />
        		<include name="commonj.jar" />
            	<include name="commons-beanutils.jar" />
                <include name="commons-cli-2.0.jar" />
    			<include name="commons-collections-3.0.jar" />
        		<include name="commons-digester.jar" />
            	<include name="commons-discovery.jar" />
                <include name="commons-logging.jar" />
    			<include name="concurrent.jar" />
        		<include name="cryptix-asn1.jar" />
            	<include name="cryptix.jar" />
                <include name="cryptix32.jar" />
    			<include name="globus_resolution_service.jar" />
        		<include name="globus_resolution_stubs_java.jar" />
            	<include name="globus_resolution_test.jar" />
                <include name="globus_transfer_service.jar" />
    			<include name="globus_transfer_stubs_java.jar" />
        		<include name="globus_transfer_test.jar" />
            	<include name="globus_usage_core.jar" />
                <include name="globus_usage_packets_common.jar" />
    			<include name="globus_wsrf_tools_test.jar" />
        		<include name="jaxrpc.jar" />
            	<include name="jce-jdk13-125.jar" />
                <include name="jgss.jar" />
    			<include name="junit.jar" />
        		<include name="log4j-1.2.8.jar" />
            	<include name="naming-common.jar" />
                <include name="naming-factory.jar" />
    			<include name="naming-java.jar" />
        		<include name="naming-resources.jar" />
            	<include name="opensaml.jar" />
                <include name="puretls.jar" />
                <include name="resolver.jar" />
    			<include name="saaj.jar" />
        		<include name="servlet.jar" />
            	<include name="wsdl4j.jar" />
    			<include name="wsrf_common.jar" />
                <include name="wsrf_core.jar" />
    			<include name="wsrf_core_registry.jar" />
        		<include name="wsrf_core_registry_stubs.jar" />
            	<include name="wsrf_core_samples_authzService.jar" />
                <include name="wsrf_core_samples_authzService_stubs.jar" />
    			<include name="wsrf_core_samples_counter.jar" />
        		<include name="wsrf_core_samples_counter_stubs.jar" />
            	<include name="wsrf_core_samples_mgmt.jar" />
                <include name="wsrf_core_samples_mgmt_stubs.jar" />
    			<include name="wsrf_core_stubs.jar" />
        		<include name="wsrf_provider_jce.jar" />
            	<include name="wsrf_test.jar" />
                <include name="wsrf_test_interop.jar" />
        		<include name="wsrf_test_interop_stubs.jar" />
            	<include name="wsrf_test_unit.jar" />
                <include name="wsrf_test_unit_stubs.jar" />
    			<include name="wsrf_tools.jar" />
        		<include name="wss4j.jar" />
            	<include name="xalan.jar" />
    			<include name="xercesImpl.jar" />
        		<include name="xml-apis.jar" />
            	<include name="xmlsec.jar" />          
            </lib>
            <classes dir="${classes.dir}"/>      
            <classes dir="${classes.dir}">
                <exclude name="*.java" />
            	<exclude name="*.class" />  
            </classes>                                
        </war>
    </target>
    
	<target name="deployTomcat" depends="checkTomcat,checkGlobus" description="Deploys this webapp to tomcat">
		<!-- please do not change the webapp dir or service mapping as this is in the code -->
		<delete dir="${ext.tomcat.dir}/webapps/caGridTransfer">
		</delete>
		<mkdir dir="${ext.tomcat.dir}/webapps/caGridTransfer" />
		<copy todir="${ext.tomcat.dir}/webapps/caGridTransfer">
			<fileset dir=".">
				<include name="**/*" />
				<exclude name="build*" />
				<exclude name="bin*" />
				<exclude name="src*" />
				<exclude name="build/**/*" />
				<exclude name="bin/**/*" />
				<exclude name="src/**/*" />
			</fileset>
		</copy>
		<copy todir="${ext.tomcat.dir}/webapps/caGridTransfer/WEB-INF/lib">
			<fileset dir="${build.lib.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${ext.tomcat.dir}/webapps/caGridTransfer/WEB-INF/lib">
			<fileset dir="../build/lib">
				<include name="*Transfer-stubs*" />
				<include name="caGrid*core*" />
			</fileset>
		</copy>
		<copy todir="${ext.tomcat.dir}/webapps/caGridTransfer/WEB-INF/lib">
			<fileset dir="../ext/dependencies/service/jars">
				<include name="caGrid*core*" />
			</fileset>
		</copy>
		<copy todir="${ext.tomcat.dir}/webapps/caGridTransfer/WEB-INF/lib">
			<fileset dir="${ext.globus.dir}/lib">
				<include name="addressing-1.0.jar" />
				<include name="axis-url.jar" />
				<include name="axis.jar" />
				<include name="bootstrap.jar" />
				<include name="cog-axis.jar" />
				<include name="cog-jglobus.jar" />
				<include name="cog-tomcat.jar" />
				<include name="cog-url.jar" />
				<include name="commonj.jar" />
				<include name="commons-beanutils.jar" />
				<include name="commons-cli-2.0.jar" />
				<include name="commons-collections-3.0.jar" />
				<include name="commons-digester.jar" />
				<include name="commons-discovery.jar" />
				<include name="commons-logging.jar" />
				<include name="concurrent.jar" />
				<include name="cryptix-asn1.jar" />
				<include name="cryptix.jar" />
				<include name="cryptix32.jar" />
				<include name="globus_resolution_service.jar" />
				<include name="globus_resolution_stubs_java.jar" />
				<include name="globus_resolution_test.jar" />
				<include name="globus_transfer_service.jar" />
				<include name="globus_transfer_stubs_java.jar" />
				<include name="globus_transfer_test.jar" />
				<include name="globus_usage_core.jar" />
				<include name="globus_usage_packets_common.jar" />
				<include name="globus_wsrf_tools_test.jar" />
				<include name="jaxrpc.jar" />
				<include name="jce-jdk13-125.jar" />
				<include name="jgss.jar" />
				<include name="junit.jar" />
				<include name="log4j-1.2.8.jar" />
				<include name="naming-common.jar" />
				<include name="naming-factory.jar" />
				<include name="naming-java.jar" />
				<include name="naming-resources.jar" />
				<include name="opensaml.jar" />
				<include name="puretls.jar" />
				<include name="resolver.jar" />
				<include name="saaj.jar" />
				<include name="servlet.jar" />
				<include name="wsdl4j.jar" />
				<include name="wsrf_common.jar" />
				<include name="wsrf_core.jar" />
				<include name="wsrf_core_registry.jar" />
				<include name="wsrf_core_registry_stubs.jar" />
				<include name="wsrf_core_samples_authzService.jar" />
				<include name="wsrf_core_samples_authzService_stubs.jar" />
				<include name="wsrf_core_samples_counter.jar" />
				<include name="wsrf_core_samples_counter_stubs.jar" />
				<include name="wsrf_core_samples_mgmt.jar" />
				<include name="wsrf_core_samples_mgmt_stubs.jar" />
				<include name="wsrf_core_stubs.jar" />
				<include name="wsrf_provider_jce.jar" />
				<include name="wsrf_test.jar" />
				<include name="wsrf_test_interop.jar" />
				<include name="wsrf_test_interop_stubs.jar" />
				<include name="wsrf_test_unit.jar" />
				<include name="wsrf_test_unit_stubs.jar" />
				<include name="wsrf_tools.jar" />
				<include name="wss4j.jar" />
				<include name="xalan.jar" />
				<include name="xercesImpl.jar" />
				<include name="xml-apis.jar" />
				<include name="xmlsec.jar" />
			</fileset>
		</copy>
	</target>

	<target name="deployJBoss" depends="checkJBoss,checkGlobus" description="Deploys this webapp to tomcat">
		<!-- please do not change the webapp dir or service mapping as this is in the code -->
		<delete dir="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war">
		</delete>
		<mkdir dir="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war" />
		<copy todir="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war">
			<fileset dir=".">
				<include name="**/*" />
				<exclude name="WEB-INF/lib/servlet*" />
				<exclude name="build*" />
				<exclude name="bin*" />
				<exclude name="src*" />
				<exclude name="build/**/*" />
				<exclude name="bin/**/*" />
				<exclude name="src/**/*" />
			</fileset>
		</copy>
		<copy todir="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war/WEB-INF/lib">
			<fileset dir="${build.lib.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war/WEB-INF/lib">
			<fileset dir="../build/lib">
				<include name="*Transfer-stubs*" />
				<include name="caGrid*core*" />
			</fileset>
		</copy>
		<copy todir="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war/WEB-INF/lib">
			<fileset dir="../ext/dependencies/service/jars">
				<include name="caGrid*core*" />
			</fileset>
		</copy>
		<copy todir="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war/WEB-INF/lib">
			<fileset dir="${ext.globus.dir}/lib">
				<include name="addressing-1.0.jar" />
				<include name="axis-url.jar" />
				<include name="axis.jar" />
				<include name="bootstrap.jar" />
				<include name="cog-axis.jar" />
				<include name="cog-jglobus.jar" />
				<include name="cog-tomcat.jar" />
				<include name="cog-url.jar" />
				<include name="commonj.jar" />
				<include name="commons-beanutils.jar" />
				<include name="commons-cli-2.0.jar" />
				<include name="commons-collections-3.0.jar" />
				<include name="commons-digester.jar" />
				<include name="commons-discovery.jar" />
				<include name="commons-logging.jar" />
				<include name="concurrent.jar" />
				<include name="cryptix-asn1.jar" />
				<include name="cryptix.jar" />
				<include name="cryptix32.jar" />
				<include name="globus_resolution_service.jar" />
				<include name="globus_resolution_stubs_java.jar" />
				<include name="globus_resolution_test.jar" />
				<include name="globus_transfer_service.jar" />
				<include name="globus_transfer_stubs_java.jar" />
				<include name="globus_transfer_test.jar" />
				<include name="globus_usage_core.jar" />
				<include name="globus_usage_packets_common.jar" />
				<include name="globus_wsrf_tools_test.jar" />
				<include name="jaxrpc.jar" />
				<include name="jce-jdk13-125.jar" />
				<include name="jgss.jar" />
				<include name="junit.jar" />
				<!--<include name="log4j-1.2.8.jar" />-->
				<include name="naming-common.jar" />
				<include name="naming-factory.jar" />
				<include name="naming-java.jar" />
				<include name="naming-resources.jar" />
				<include name="opensaml.jar" />
				<include name="puretls.jar" />
				<include name="resolver.jar" />
				<include name="saaj.jar" />
				<!--<include name="servlet.jar" />-->
				<include name="wsdl4j.jar" />
				<include name="wsrf_common.jar" />
				<include name="wsrf_core.jar" />
				<include name="wsrf_core_registry.jar" />
				<include name="wsrf_core_registry_stubs.jar" />
				<include name="wsrf_core_samples_authzService.jar" />
				<include name="wsrf_core_samples_authzService_stubs.jar" />
				<include name="wsrf_core_samples_counter.jar" />
				<include name="wsrf_core_samples_counter_stubs.jar" />
				<include name="wsrf_core_samples_mgmt.jar" />
				<include name="wsrf_core_samples_mgmt_stubs.jar" />
				<include name="wsrf_core_stubs.jar" />
				<include name="wsrf_provider_jce.jar" />
				<include name="wsrf_test.jar" />
				<include name="wsrf_test_interop.jar" />
				<include name="wsrf_test_interop_stubs.jar" />
				<include name="wsrf_test_unit.jar" />
				<include name="wsrf_test_unit_stubs.jar" />
				<include name="wsrf_tools.jar" />
				<include name="wss4j.jar" />
				<include name="xalan.jar" />
				<include name="xercesImpl.jar" />
				<include name="xml-apis.jar" />
				<include name="xmlsec.jar" />
			</fileset>
		</copy>
		<replace file="${ext.jboss.dir}/server/default/deploy/caGridTransfer.war/WEB-INF/classes/server.properties" token="WEBAPP_CONTEXT" value="wsrf.war">
		</replace>
	</target>
</project>
